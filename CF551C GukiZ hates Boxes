#include <cstdio>
#include <cstring>
#include <cctype>
#include <algorithm>
using namespace std;

namespace thecold
{
	typedef long long ll;

	inline int read()
	{
		int res = 0;
		char c;
		bool flag = false;
		c = getchar();
		while(!isdigit(c))
		{
			flag = (c == '-');
			c = getchar();
		}
		while(isdigit(c))
		{
			res = res * 10 + (c ^ 48);
			c = getchar();
		}
		return !flag ? res : -res;
	}

	const int Max_n = 1e5 + 5;

	int n , m;
	ll tmp[Max_n] , lstrow , a[Max_n];

	bool zzzyyds = true;

	inline bool check(const ll x)
	{
		if(x <= lstrow)
			return false;
		ll cnt = 1 , now = 1 , rem = x - 1;
		memcpy(tmp , a , sizeof(a));
		while(zzzyyds)
		{
			ll red = min(rem , tmp[now]) , jmp = 0;
			rem -= red , tmp[now] -= red;
			while(!tmp[now] && now <= n)
				++ now , ++ jmp;
			if(now > n)
				return zzzyyds;
			rem -= jmp;
			if(rem <= 0)
				++ cnt , rem = x - now;
			if(cnt > m)
				return false;
		}
	}

	inline void main()
	{
		n = read() , m = read();
		for(int i = 1 ; i <= n ; ++ i)
		{
			a[i] = read();
			if(a[i])
				lstrow = i;
		}
		ll l = 0 , r = 1e15 , ans = 0;
		while(l <= r)
		{
			ll mid = (l + r) >> 1;
			if(check(mid))
				ans = mid , r = mid - 1;
			else l = mid + 1;
		}
		printf("%lld\n" , ans);
	}
}

int main()
{
	thecold::main();
	return 0;
}
/*
13 3
1 9 1 9 8 1 0 1 1 4 5 1 4

24
*/
