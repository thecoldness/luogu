#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

namespace thecold
{
	typedef long long ll;
	
	const int Max_n = 5e5 + 5;
	
	ll ans;
	
	int height[Max_n] , rnk[Max_n] , tmp[Max_n] , buk[Max_n] , sa[Max_n] , n;
	int top;
	
	char c[Max_n << 1];
	
	struct node
	{
		int l , r , val;
		node(const int a , const int b , const int c)
		{
			l = a , r = b , val = c;
		}
		node(){}
	}st[Max_n];
	
	inline void clear()
	{
		memset(buk , 0 , sizeof(buk));
	}
	
	inline void main()
	{
		scanf("%s" , c + 1);
		n = strlen(c + 1) , ans = 1ll * n * (n + 1) * (n - 1) / 2;
		int *rk = rnk , *tp = tmp;
		for(int i = 1 ; i <= n ; ++ i)
			rk[i] = c[i] , tp[i] = i;
		for(int i = 1 ; i <= n ; ++ i)
			++ buk[rk[i]];
		for(int i = 1 ; i <= 125 ; ++ i)
			buk[i] += buk[i - 1];
		for(int i = n ; i ; -- i)
			sa[buk[rk[tp[i]]] --] = tp[i];
		for(int len = 1 ; len < n ; len <<= 1 )
		{
			int p = 0;clear();
//			for(int i = n ; i + p > n ; -- i) bug
			for(int i = n ; i + len > n ; -- i)
				tp[ ++ p] = i;
			for(int i = 1 ; i <= n ; ++ i)
				if(sa[i] > len) tp[ ++ p] = sa[i] - len;
			for(int i = 1 ; i <= n ; ++ i)
				++ buk[rk[i]];
			for(int i = 1 ; i <= max(n , 125) ; ++ i)
				buk[i] += buk[i - 1];
			for(int i = n ; i ; -- i)
				sa[buk[rk[tp[i]]] -- ] = tp[i];
			swap(tp , rk);
			rk[sa[1]] = 1; int top = 1;
			for(int i = 2 ; i <= n ; ++ i)
				rk[sa[i]] = (tp[sa[i]] == tp[sa[i - 1]] && tp[sa[i] + len] == tp[sa[i - 1] + len]) ? top : ++ top;
		}
		for(int i = 1 ; i <= n ; ++ i)
			rnk[sa[i]] = i;
		int lst = 0;
		for(int i = 1 ; i <= n ; ++ i)
		{
			if(lst) -- lst;
			if(sa[i])
				while(c[i + lst] == c[sa[rnk[i] - 1] + lst] && i + lst <= n && sa[rnk[i] - 1] + lst <= n) 
					++ lst;
			height[rnk[i]] = lst;
		}
		ll tmp = 0;
		for(int i = 1 ; i <= n ; ++ i)
		{
			int l = i;
			while(top && st[top].val >= height[i])
				tmp -= 1ll * (st[top].r - st[top].l + 1) * st[top].val , l = st[top].l , -- top;
			tmp += 1ll * (i - l + 1) * height[i] , ans -= 2ll * tmp;
			st[ ++ top] = node(l , i , height[i]);
		}
		printf("%lld\n" , ans);
	}
}

int main()
{
	thecold::main();
	return 0;
}
