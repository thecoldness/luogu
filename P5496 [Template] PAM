#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

namespace thecold
{
	const int Max_n = 5e5 + 5;

	char c[Max_n] , s[Max_n];

	int k , n , lst , son[Max_n][27] , tot = 1;
	int len[Max_n] , link[Max_n] , sum[Max_n];

	inline int find(const int pos , const int beg)
	{
		int ret = beg;
		// while(pos - len[ret] - 1 > 0 && s[pos - len[ret] - 1] != s[pos]) ret = link[ret]; bug
		while(pos - len[ret] - 1 < 0 || s[pos - len[ret] - 1] != s[pos]) ret = link[ret];
		return ret;
	}

	inline void insert(const int pos)
	{
		int p = find(pos , lst) , ch = s[pos] - 'a';
		if(!son[p][ch])
		{
			++ tot , len[tot] = len[p] + 2;
			int q = find(pos , link[p]);
			link[tot] = son[q][ch] , son[p][ch] = tot;
			sum[tot] = sum[link[tot]] + 1;
		}
		lst = son[p][ch];
	}

	inline void main()
	{
		scanf("%s" , c + 1); n = strlen(c + 1);
		link[1] = link[0] = 1 , len[1] = -1 , len[0] = 0;
		for(int i = 1 ; i <= n ; ++ i)
		{
			s[i] = (c[i] - 97 + k) % 26 + 97;
			insert(i); printf("%d " , k = sum[lst]);
		}
	}
}

int main()
{
	thecold::main();
	return 0;
}
