#include <cstdio>
#include <cctype>
#include <cstring>
#include <algorithm>
using namespace std;

namespace thecold
{
	typedef long long ll;

	const int jzp = 167772161;
	const int G = 3; const int Max_n = 2e5 + 5;

	int n , Gi , len , lim , rev[Max_n << 2];
	int f[Max_n << 2] , g[Max_n << 2];

	inline int add(const int x , const int y)
	{
		int ret = x + y;
		if(ret >= jzp) ret -= jzp;
		return ret;
	}

	inline void prepare(const int lenth)
	{
		len = 1 , lim = 0;
		while(len <= lenth) len <<= 1 , ++ lim;
		for(int i = 1 ; i < len ; ++ i) rev[i] = (rev[i >> 1] >> 1) | ((i & 1) << (lim - 1));
	}

	inline int quickpow(ll x , ll y)
	{
		ll ret = 1;
		while(y)
		{
			if(y & 1) ret = ret * x % jzp;
			x = x * x % jzp , y >>= 1;
		}
		return ret;
	}

	inline void NTT(int *w , const int opt)
	{
		for(int i = 1 ; i < len ; ++ i)
			if(rev[i] > i) swap(w[rev[i]] , w[i]);
		for(int dep = 1 ; dep <= lim ; ++ dep)
		{
			int base = quickpow(opt == 1 ? G : Gi , (jzp - 1) / (1 << dep));
			for(int i = 0 ; i < len ; i += 1 << dep)
			{
				int q = 1;
				for(int j = 0 ; j < 1 << (dep - 1) ; ++ j)
				{
					int ui = w[i + j] , vi = 1ll * w[i + j + (1 << (dep - 1))] * q % jzp;
					w[i + j] = add(ui , vi) , w[i + j + (1 << (dep - 1))] = add(ui , jzp - vi);
					q = 1ll * q * base % jzp;
				}
			}
		}
		if(opt == -1)
		{
			int inv = quickpow(len , jzp - 2);
			for(int i = 0 ; i < len ; ++ i) w[i] = 1ll * w[i] * inv % jzp;
		}
	}

	ll jc[Max_n] , invjc[Max_n];

	inline void main()
	{
		scanf("%d" , &n); jc[0] = invjc[0] = 1 , Gi = quickpow(G , jzp - 2);
		for(int i = 1 ; i <= n ; ++ i) jc[i] = jc[i - 1] * i % jzp;
		invjc[n] = quickpow(jc[n] , jzp - 2);
		for(int i = n - 1 ; i ; -- i) invjc[i] = invjc[i + 1] * (i + 1) % jzp;
		for(int i = 0 ; i <= n ; ++ i)
			if(i & 1) f[i] = jzp - invjc[i];
			else f[i] = invjc[i];
		for(int i = 0 ; i <= n ; ++ i) g[i] = 1ll * quickpow(i , n) * invjc[i] % jzp;
		prepare(n * 2) , NTT(f , 1) , NTT(g , 1);
		for(int i = 0 ; i < len ; ++ i) f[i] = 1ll * f[i] * g[i] % jzp;
		NTT(f , -1);
		for(int i = 0 ; i <= n ; ++ i) printf("%d " , f[i]);
	}
}

int main()
{
	thecold::main();
	return 0;
}
