#include <cstdio>
#include <cstring>
#include <cctype>
#include <algorithm>
#include <cmath>
using namespace std;

namespace thecold
{
	inline int read()
	{
		int res = 0;
		char c;
		bool flag = false;
		c = getchar();
		while(!isdigit(c))
		{
			flag = (c == '-');
			c = getchar();
		}
		while(isdigit(c))
		{
			res = res * 10 + (c ^ 48);
			c = getchar();
		}
		return !flag ? res : -res;
	}

	const int Max_n = 5e3 + 5;

	int f[Max_n][Max_n][2] , n , a[Max_n];

	inline void main()
	{
		n = read();
		for(int i = 1 ; i <= n ; ++ i)
			a[i] = read();
		memset(f , 0x3f , sizeof(f));
		f[0][0][0] = f[1][0][0] = f[1][1][1] = 0;
		for(int i = 2 ; i <= n ; ++ i)
			for(int j = 0 ; j <= (i + 1) / 2 ; ++ j)
			{
				f[i][j][0] = min(f[i - 1][j][0] , f[i - 1][j][1] + max(0 , a[i] - a[i - 1] + 1));
				f[i][j][1] = min(f[i - 2][j - 1][0] + max(0 , a[i - 1] - a[i] + 1) , f[i - 2][j - 1][1] + max(0 , max(a[i - 1] - a[i - 2] + 1 , a[i - 1] - a[i] + 1)));
			}
		for(int i = 1 ; i <= (n + 1) / 2 ; ++ i)
			printf("%d " , min(f[n][i][0] , f[n][i][1]));
	}
}

int main()
{
	thecold::main();
	return 0;
}
