#include <cstdio>
#include <algorithm>
#include <cctype>
#include <cstring>
using namespace std;
inline int read()
{
	int res = 0;
	char c;
	bool flag = false;
	c = getchar();
	while(!isdigit(c))
	{
		flag = (c == '-');
		c = getchar();
	}
	while(isdigit(c))
	{
		res = res * 10 + (c ^ 48);
		c = getchar();
	}
	return !flag ? res : -res;
}
typedef long long ll;
const int Max_n = 2e3 + 5;
const int MOD = 1e9 + 7;
int n , k , a[Max_n];
ll c[Max_n];
inline int quickpow(ll x , int y)
{
	ll ret = 1;
	while(y)
	{
		if(y & 1) ret *= x , ret %= MOD;
		x *= x , x %= MOD;
		y >>= 1;
	}
	return ret;
}
inline int ni(int x)
{
	return quickpow(x , MOD - 2);
}
int main()
{
	// freopen("data.in" , "r" , stdin);
	n = read() , k = read();
	c[0]= 1;
	for(int i = 1 ; i <= n ; ++ i)
		c[i] = (c[i - 1] * (k - 1 + i) % MOD) * ni(i) % MOD;
	for(int i = 1 ; i <= n ; ++ i)
		a[i] = read();
	for(int i = 1 ; i <= n ; ++ i)
	{
		ll cnt = 0;
		for(int j = 1 ; j <= i ; ++ j)
			cnt += c[i - j] * a[j] % MOD , cnt %= MOD;
		printf("%lld " , cnt);
	}
	return 0;
}
