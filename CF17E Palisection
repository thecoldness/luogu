#include<cstdio>
#include<algorithm>
#include<cctype>
using namespace std;
inline int read()
{
	int res = 0;
	char c;
	bool flag = true;
	c = getchar();
	while(!isdigit(c))
	{
		flag = (c != '-');
		c = getchar();
	}
	while(isdigit(c))
	{
		res = res * 10 + (c ^ 48);
		c = getchar();
	}
	return flag ? res : -res;
}
typedef long long ll;
const int MOD = 51123987;
const int Max_n = 2e6 + 5;
char c[Max_n] , fak[Max_n * 2];
int n , maxr , pos , r[Max_n * 2];
ll ans , head[Max_n] , tail[Max_n];
int main()
{
	n = read();
	scanf("%s" , c + 1);
	for(int i = 1 ; i <= 2 * n + 1 ; ++ i)
		if(i % 2)	fak[i] = '#';
		else fak[i] = c[i / 2];
	r[1] = 1 , maxr = 2 , pos = 1;
	for(int i = 2 ; i <= n * 2 + 1 ; ++ i)
	{
		if(i >= maxr)	r[i] = 1;
		else r[i] = min (r[pos * 2 - i] , pos + r[pos] - i);
		while((i - r[i] >= 1) && (i + r[i] <= n * 2 + 1) && (fak[i + r[i]] == fak[i - r[i]]))	
			++ r[i];
		if(i + r[i] >= maxr)	maxr = i + r[i] , pos = i;
	}
	for(int i = 2 ; i <= n * 2 ; ++ i)
		if(!(i % 2))
		{
			++ head[i / 2 - r[i] / 2 + 1] , -- head[i / 2 + 1];
			++ tail[i / 2] , -- tail[i / 2 + r[i] / 2];
			ans += (r[i] / 2) , ans %= MOD;
		}
		else
		{
			if(r[i] == 1)	continue;
			++ head[i / 2 - (r[i] - 1) / 2 + 1] , -- head[i / 2 + 1];
			++ tail[i / 2 + 1] , -- tail[i / 2 + 1 + (r[i] - 1) / 2];
			ans += (r[i] - 1) / 2 , ans %= MOD;
		}
	for(int i = 1 ; i <= n ; ++ i)
	{
		head[i] += head[i - 1] , head[i] %= MOD;
		tail[i] += tail[i - 1] , tail[i] %= MOD;
	}
	for(int i = 1 ; i <= n ; ++ i)
		head[i] += head[i - 1] , head[i] %= MOD;
	ans = ans * (ans - 1) / 2 , ans %= MOD;
	for(int i = 1 ; i <= n ; ++ i)
		ans -= tail[i] * (head[n] - head[i]) % MOD , ans %= MOD;
	ans = (ans + MOD) % MOD;
	printf("%lld" , ans);
	return 0;
}
