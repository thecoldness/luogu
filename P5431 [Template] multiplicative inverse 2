#include <cstdio>
#include <algorithm>
#include <cstring>
#include <cctype>
using namespace std;

namespace thecold
{
	inline int read()
	{
		int res = 0;
		char c;
		bool flag = false;
		c = getchar();
		while(!isdigit(c))
		{
			flag = (c == '-');
			c = getchar();
		}
		while(isdigit(c))
		{
			res = res * 10 + (c ^ 48);
			c = getchar();
		}
		return !flag ? res : -res;
	}
	
	const int Max_n = 5e6 + 5;
	
	int n , jzp , k , suf[Max_n] , pre , w[Max_n];
	int ni , ans , ki;
	
	inline int quickpow(int x , int y)
	{
		int ret = 1;
		while(y)
		{
			if(y & 1)
				ret = 1ll * ret * x % jzp;
			x = 1ll * x * x % jzp , y >>= 1;
		}
		return ret;
	}
	
	inline int add(const int x , const int y)
	{
		int ret = x + y;
		if(ret >= jzp)
			ret -= jzp;
		return ret;
	}
	
	inline void main()
	{
		n = read() , jzp = read() , ki = k = read() , pre = 1;
		for(int i = 1 ; i <= n ; ++ i)
			w[i] = read();
		suf[n + 1] = 1;
		for(int i = n ; i ; -- i)
			suf[i] = 1ll * suf[i + 1] * w[i] % jzp;
		ni = quickpow(suf[1] , jzp - 2);
		for(int i = 1 ; i <= n ; ++ i)
		{
			ans = add(ans , 1ll * ki * suf[i + 1] % jzp * pre % jzp * ni % jzp);
			pre = 1ll * pre * w[i] % jzp , ki = 1ll * ki * k % jzp;
		}
		printf("%d\n" , ans);
	}
}

int main()
{
	thecold::main();
	return 0;
}
