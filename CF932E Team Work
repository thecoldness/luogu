#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

namespace thecold
{
	typedef long long ll;
	
	const int jzp = 1e9 + 7;
	const int Max_k = 5e3 + 5;
	
	int n , k , s[Max_k][Max_k] , xjm , m , ci;
	int ans , inv2;
	
	inline int quickpow(ll x , ll y)
	{
		ll ret = 1;
		while(y)
		{
			if(y & 1) ret = ret * x % jzp;
			x = x * x % jzp , y >>= 1;
		}
		return ret;
	}
	
	inline int add(const int x , const int y)
	{
		int ret = x + y;
		if(ret >= jzp) ret -= jzp;
		return ret;
	}
	
	inline void main()
	{
		scanf("%d %d" , &n , &k);xjm = n , ci = 1;
		inv2 = quickpow(2 , jzp - 2) , m = quickpow(2 , n - 1);
		s[0][0] = 1;
		for(int i = 1 ; i <= k ; ++ i)
			for(int j = 1 ; j <= i ; ++ j)
//				s[i][j] = add(s[i - 1][j - 1] , 1ll * s[i - 1][j] * (i - 1) % jzp); bug
				s[i][j] = add(s[i - 1][j - 1] , 1ll * s[i - 1][j] * j % jzp);
		for(int j = 1 ; j <= k ; ++ j)
		{
			ans = add(ans , 1ll * s[k][j] * xjm % jzp * m % jzp);
//			xjm = 1ll * xjm * (n - ci) % jzp , -- ci;bug
			xjm = 1ll * xjm * (n - ci) % jzp , ++ ci; 
			m = 1ll * m * inv2 % jzp;
		}
		printf("%d\n" , ans);
	}
}

int main()
{
	thecold::main();
	return 0;
}
