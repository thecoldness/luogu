#include <cstdio>
#include <cstring>
#include <cctype>
#include <algorithm>
using namespace std;

namespace thecold
{
	typedef long long ll;

	const int Max_n = 1e4 + 5;

	int prime[Max_n] , tot , n , ans , l , r;

	bool vis[Max_n];

	inline void pre_work()
	{
		for(int i = 2 ; i <= 10000 ; ++ i)
		{
			if(!vis[i])
				vis[i] = true , prime[ ++ tot] = i;
			for(int j = 1 ; j <= tot && (ll)prime[j] * i <= 10000 ; ++ j)
			{
				vis[i * prime[j]] = true;
				if(i % prime[j] == 0)
					break;
			}
		}
	}

	inline void main()
	{
		// freopen("data.in" , "r" , stdin);
		n = 1000;
		pre_work();
		while(scanf("%d" , &n) != EOF)
		{
			ans = 0;
			l = 1 , r = upper_bound(prime + 1 , prime + tot + 1 , n) - prime - 1;
			for(; r >= l ; -- r)
			{
				ll res = prime[r];
				while(res * prime[l] <= n && l < r)
					res *= prime[l] , ++ l;
				++ ans;
			}
			printf("%d\n" , ans);
		}
	}
}

int main()
{
	thecold::main();
	return 0;
}
