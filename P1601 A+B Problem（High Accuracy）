#include<cstdio>
#include<cctype>
#include<cstring>
#include<algorithm>
using namespace std;
const int Max_n = 1e3;
struct node{
	int top;
	int num[Max_n];
	int& operator [](int x)
	{
		return num[x];
	}
	void clean()
	{
		memset(num , 0 , sizeof(num));
		return;
	}
}a , b , ans;
char aa[Max_n] , bb[Max_n];
node operator + (node x , node y)
{
	node ret;
	ret.clean();
	int topx = x.top , topy = y.top;
	for(int i = 1 ; i <= max(topx , topy) ; ++ i)
		ret[i] = x[i] + y[i];
	for(int i = 1 ; i <= max(topx , topy) ; ++ i)
		ret[i + 1] += ret[i] / 10 , ret[i] %= 10;
	ret.top = max(topx , topy) + 1;
	if(!ret[ret.top]) -- ret.top;
	return ret;
}
int main()
{
	scanf("%s %s" , aa + 1 , bb + 1);
	a.top = strlen(aa + 1) , b.top = strlen(bb + 1);
	for(int i = 1 ; i <= a.top ; ++ i)
		a[i] = aa[a.top - i + 1] - '0';
	for(int i = 1 ; i <= b.top ; ++ i)
		b[i] = bb[b.top - i + 1] - '0';
	ans = a + b;
	for(int i = ans.top ; i ; -- i)
		putchar('0' + ans[i]);
	return 0;
}
