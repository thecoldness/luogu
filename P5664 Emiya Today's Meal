#include<cstdio>
#include<algorithm>
#include<cctype>
using namespace std;
#define int long long
inline int read()
{
	int res = 0;
	char c;
	bool flag = true;
	c = getchar();
	while(!isdigit(c))
	{
		if(c == '-')	flag = false;
		c = getchar();
	}
	while(isdigit(c))
	{
		res = res * 10 + (c ^ 48);
		c = getchar();
	}
	return flag ? res : -res;
}
inline void write(int x)
{
	if(x < 0)
	{
		putchar('-');
		x = -x;
	}
	if(x > 9)	write(x / 10);
	putchar('0' + x % 10);
}
const int Max_n = 105;
const int MOD = 998244353;
const int Max_m = 2e3 + 5;
int a[Max_n][Max_m] , s[Max_n] , f[Max_n][Max_n * 2] , g[Max_n] , n , m , ans;
signed main()
{
	#ifdef MYDEBUG
	write(100);
	#endif
	n = read() , m = read();
	for(int i = 1 ; i <= n ; ++ i)
		for(int j = 1 ; j <= m ; ++ j)
		{
			a[i][j] = read();
			s[i] += a[i][j];
			s[i] %= MOD;
		}
	f[0][n] = 1;
	for(int j = 1 ; j <= m ; ++ j)
	{
		f[0][n] = 1;
		for(int i = 1 ; i <= n ; ++ i)
			for(int k = 1 ; k <= 2 * n ; ++ k)
				f[i][k] = f[i - 1][k] + (a[i][j] * f[i - 1][k - 1] % MOD) + ((s[i] - a[i][j]) * f[i - 1][k + 1] % MOD) , f[i][k] %= MOD;
		for(int i = n + 1; i <= 2 * n ; ++ i)
			ans -= f[n][i], ans %= MOD;
	}
		
	g[0] = 1;
	for(int i = 1 ; i <= n ; ++ i)
		g[i] = g[i - 1] * (s[i] + 1) , g[i] %= MOD;
	ans += g[n] - 1;
	write((ans + MOD) % MOD);
	return 0;
}
