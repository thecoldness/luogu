#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cctype>
using namespace std;

namespace thecold
{
	inline int read()
	{
		int res = 0;
		char c;
		bool flag = false;
		c = getchar();
		while(!isdigit(c))
		{
			flag = (c == '-');
			c = getchar();
		}
		while(isdigit(c))
		{
			res = res * 10 + (c ^ 48);
			c = getchar();
		}
		return !flag ? res : -res;
	}

	const int Max_n = 1e3 + 5;

	int in[Max_n] , out[Max_n] , n , ans , fa[Max_n];

	bool vis[Max_n][Max_n] , not_eular[Max_n];

	int find(int x)
	{
		return fa[x] == x ? x : fa[x] = find(fa[x]);
	}

	inline void merge(int x , int y)
	{
		fa[find(x)] = find(y);
	}

	inline void main()
	{
		n = read();
		for(int i = 1 ; i <= 1000 ; ++ i)
			fa[i] = i;
		for(int i = 1 ; i <= n ; ++ i)
		{
			int ui = read() , vi = read();
			if(vis[ui][vi])	continue;
			vis[ui][vi] = true;
			merge(ui , vi);
			++ in[ui] , ++ out[vi];
		}
		for(int i = 1 ; i <= 1000 ; ++ i)
			if(in[i] != out[i])
				not_eular[find(i)] = true;
		for(int i = 1 ; i <= 1000 ; ++ i)
			if(fa[i] == i && in[i] && !not_eular[i])
				++ ans;
		for(int i = 1 ; i <= 1000 ; ++ i)
			ans += max(in[i] , out[i]);
		printf("%d\n" , ans);
	}
}

int main()
{
	thecold::main();
	return 0;
}
