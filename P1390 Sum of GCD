#include <cstdio>
#include <algorithm>
#include <cstring>
#include <cctype>
using namespace std;

namespace thecold
{
	typedef long long ll;
	
	inline int read()
	{
		int res = 0;
		char c;
		bool flag = false;
		c = getchar();
		while(!isdigit(c))
		{
			flag = (c == '-');
			c = getchar();
		}
		while(isdigit(c))
		{
			res = res * 10 + (c ^ 48);
			c = getchar();
		}
		return !flag ? res : -res;
	}
	
	const int Max_n = 2e6 + 5;
	
	int mu[Max_n] , n , prime[Max_n] , tot;
	
	ll f[Max_n] , g[Max_n] , ans;
	
	bool vis[Max_n];
	
	inline void main()
	{
		n = read();
		for(int i = 1 ; i <= n ; ++ i)
			f[i] = n / i , f[i] *= f[i];
		mu[1] = 1;
		for(int i = 2 ; i <= n ; ++ i)
		{
//			if(!vis[i]) mu[i] = 1 , vis[i] = true , prime[ ++ tot] = i; bug
			if(!vis[i]) mu[i] = -1 , vis[i] = true , prime[ ++ tot] = i;
			for(int j = 1 ; j <= tot && (ll)i * prime[j] <= n ; ++ j)
			{
				vis[i * prime[j]] = true;
				if(i % prime[j] == 0) {mu[i * prime[j]] = 0; break;}
				mu[i * prime[j]] = - mu[i];
			}
		}
		for(int i = 1 ; i <= n ; ++ i)
			for(int k = 1 ; (ll) k * i <= n ; ++ k)
				g[i] += f[k * i] * mu[k];
		for(int i = 1 ; i <= n ; ++ i)
			ans += g[i] * i;
		ans -= (ll)n * (n + 1) / 2 , ans /= 2;
		printf("%lld\n" , ans);
	}
}

int main()
{
	thecold::main();
	return 0;
}
